(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{462:function(a,t,r){"use strict";r.r(t);var e=r(2),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"webpack-proxy-工作原理-为什么能解决跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-proxy-工作原理-为什么能解决跨域"}},[a._v("#")]),a._v(" webpack proxy 工作原理 为什么能解决跨域")]),a._v(" "),t("p",[a._v("简述：跨域 一种浏览器安全策略限制")]),a._v(" "),t("h3",{attrs:{id:"webpack-dev-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server"}},[a._v("#")]),a._v(" webpack-dev-server")]),a._v(" "),t("p",[a._v("仅适用于开发阶段 创建一个本地服务器")]),a._v(" "),t("h4",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("p",[a._v("abababa")]),a._v(" "),t("h3",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[a._v("#")]),a._v(" 原理")]),a._v(" "),t("p",[a._v("利用http代理中间件，实现请求转发给其他服务器以避免跨域")]),a._v(" "),t("h3",{attrs:{id:"跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[a._v("#")]),a._v(" 跨域")]),a._v(" "),t("p",[a._v("webpack-dev-server会启动一个本地开发服务器，根据浏览器同源策略，本地直接访问后端就会发生跨域。\n在设置代理后，本地发送请求，代理服务器响应并转发到目标服务器，目标服务器响应并发给代理，代理就会传数据给本地")]),a._v(" "),t("p",[a._v("代理to本地，都是同源，并没有跨域")]),a._v(" "),t("p",[a._v("代理to后端，服务器跟服务器通讯并不存在跨域行为。")])])}),[],!1,null,null,null);t.default=s.exports}}]);